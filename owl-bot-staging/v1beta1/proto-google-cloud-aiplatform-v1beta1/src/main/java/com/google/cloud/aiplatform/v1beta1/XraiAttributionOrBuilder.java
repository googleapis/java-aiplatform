// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/aiplatform/v1beta1/explanation.proto

package com.google.cloud.aiplatform.v1beta1;

public interface XraiAttributionOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.cloud.aiplatform.v1beta1.XraiAttribution)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Required. The number of steps for approximating the path integral.
   * A good value to start is 50 and gradually increase until the
   * sum to diff property is met within the desired error range.
   * Valid range of its value is [1, 100], inclusively.
   * </pre>
   *
   * <code>int32 step_count = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The stepCount.
   */
  int getStepCount();

  /**
   * <pre>
   * Config for SmoothGrad approximation of gradients.
   * When enabled, the gradients are approximated by averaging the gradients
   * from noisy samples in the vicinity of the inputs. Adding
   * noise can help improve the computed gradients. Refer to this paper for more
   * details: https://arxiv.org/pdf/1706.03825.pdf
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.SmoothGradConfig smooth_grad_config = 2;</code>
   * @return Whether the smoothGradConfig field is set.
   */
  boolean hasSmoothGradConfig();
  /**
   * <pre>
   * Config for SmoothGrad approximation of gradients.
   * When enabled, the gradients are approximated by averaging the gradients
   * from noisy samples in the vicinity of the inputs. Adding
   * noise can help improve the computed gradients. Refer to this paper for more
   * details: https://arxiv.org/pdf/1706.03825.pdf
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.SmoothGradConfig smooth_grad_config = 2;</code>
   * @return The smoothGradConfig.
   */
  com.google.cloud.aiplatform.v1beta1.SmoothGradConfig getSmoothGradConfig();
  /**
   * <pre>
   * Config for SmoothGrad approximation of gradients.
   * When enabled, the gradients are approximated by averaging the gradients
   * from noisy samples in the vicinity of the inputs. Adding
   * noise can help improve the computed gradients. Refer to this paper for more
   * details: https://arxiv.org/pdf/1706.03825.pdf
   * </pre>
   *
   * <code>.google.cloud.aiplatform.v1beta1.SmoothGradConfig smooth_grad_config = 2;</code>
   */
  com.google.cloud.aiplatform.v1beta1.SmoothGradConfigOrBuilder getSmoothGradConfigOrBuilder();
}
