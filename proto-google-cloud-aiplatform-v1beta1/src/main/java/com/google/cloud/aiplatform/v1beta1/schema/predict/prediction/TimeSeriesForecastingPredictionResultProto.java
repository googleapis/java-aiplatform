/*
 * Copyright 2020 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/aiplatform/v1beta1/schema/predict/prediction/time_series_forecasting.proto

package com.google.cloud.aiplatform.v1beta1.schema.predict.prediction;

public final class TimeSeriesForecastingPredictionResultProto {
  private TimeSeriesForecastingPredictionResultProto() {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistryLite registry) {}

  public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions((com.google.protobuf.ExtensionRegistryLite) registry);
  }

  static final com.google.protobuf.Descriptors.Descriptor
      internal_static_google_cloud_aiplatform_v1beta1_schema_predict_prediction_TimeSeriesForecastingPredictionResult_descriptor;
  static final com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_google_cloud_aiplatform_v1beta1_schema_predict_prediction_TimeSeriesForecastingPredictionResult_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
    return descriptor;
  }

  private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

  static {
    java.lang.String[] descriptorData = {
      "\nWgoogle/cloud/aiplatform/v1beta1/schema"
          + "/predict/prediction/time_series_forecast"
          + "ing.proto\0229google.cloud.aiplatform.v1bet"
          + "a1.schema.predict.prediction\032\034google/api"
          + "/annotations.proto\"`\n%TimeSeriesForecast"
          + "ingPredictionResult\022\r\n\005value\030\001 \001(\002\022\023\n\013lo"
          + "wer_bound\030\002 \001(\002\022\023\n\013upper_bound\030\003 \001(\002B\322\001\n"
          + "=com.google.cloud.aiplatform.v1beta1.sch"
          + "ema.predict.predictionB*TimeSeriesForeca"
          + "stingPredictionResultProtoP\001Zcgoogle.gol"
          + "ang.org/genproto/googleapis/cloud/aiplat"
          + "form/v1beta1/schema/predict/prediction;p"
          + "redictionb\006proto3"
    };
    descriptor =
        com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(
            descriptorData,
            new com.google.protobuf.Descriptors.FileDescriptor[] {
              com.google.api.AnnotationsProto.getDescriptor(),
            });
    internal_static_google_cloud_aiplatform_v1beta1_schema_predict_prediction_TimeSeriesForecastingPredictionResult_descriptor =
        getDescriptor().getMessageTypes().get(0);
    internal_static_google_cloud_aiplatform_v1beta1_schema_predict_prediction_TimeSeriesForecastingPredictionResult_fieldAccessorTable =
        new com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
            internal_static_google_cloud_aiplatform_v1beta1_schema_predict_prediction_TimeSeriesForecastingPredictionResult_descriptor,
            new java.lang.String[] {
              "Value", "LowerBound", "UpperBound",
            });
    com.google.api.AnnotationsProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
